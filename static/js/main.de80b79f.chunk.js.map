{"version":3,"sources":["requests.js","axios.js","Row.js","Nav.js","Banner.js","App.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","props","useState","movies","setMovies","trailerURL","setTrailerURL","useEffect","a","get","fetchURL","request","data","results","fetchData","className","title","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","isLargeRow","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de80b79f.chunk.js","sourcesContent":["const API_KEY = \"5e1bde674f83bbad9efe53a2b364ecea\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import \"./Row.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"http://image.tmdb.org/t/p/original\";\r\nfunction Row(props) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerURL, setTrailerURL] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(props.fetchURL);\r\n      setMovies(request.data.results);\r\n    }\r\n    fetchData();\r\n  }, [props.fetchURL]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  function handleClick(movie) {\r\n    if (trailerURL) {\r\n      setTrailerURL(\"\");\r\n    } else\r\n      setTrailerURL(\r\n        movieTrailer(movie?.name || \"\")\r\n          .then((url) => {\r\n            const urlParams = new URLSearchParams(new URL(url).search);\r\n            setTrailerURL(urlParams.get(\"v\"));\r\n          })\r\n          .catch((error) => console.log(error))\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{props.title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <img\r\n              key={movie.id}\r\n              onClick={() => handleClick(movie)}\r\n              className={`row_poster ${props.isLargeRow && \"row_large\"}`}\r\n              src={`${base_url}${\r\n                props.isLargeRow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {trailerURL && <Youtube videoId={trailerURL} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"Avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${movie?.backdrop_path})`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner_desc\">{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n      <div className=\"banner_fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import requests from \"./requests\";\nimport Row from \"./Row.js\";\nimport Nav from \"./Nav.js\";\nimport \"./App.css\";\nimport Banner from \"./Banner\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"Netflix Originals\"\n        fetchURL={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchURL={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchURL={requests.fetchTrending} isLargeRow />\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}